# Generated by Django 5.0.6 on 2024-06-22 20:40

import app.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=55, validators=[app.models.check_on_letter], verbose_name='country')),
                ('city', models.CharField(max_length=55, validators=[app.models.check_on_letter], verbose_name='city')),
                ('street', models.CharField(max_length=55, verbose_name='street')),
                ('num_house', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(500)], verbose_name='num_house')),
                ('housing', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(75)], verbose_name='housing')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mark', models.CharField(max_length=50, verbose_name='name')),
                ('model', models.CharField(max_length=50, verbose_name='model')),
                ('date_of_issue', models.DateField(validators=[app.models.check_on_variable_date], verbose_name='year_of_issue')),
                ('price', models.FloatField(validators=[django.core.validators.MaxValueValidator(1000000000000), django.core.validators.MinValueValidator(0)], verbose_name='price')),
                ('description', models.TextField(max_length=600, verbose_name='description')),
                ('for_sale', models.BooleanField(default=False, verbose_name='for_sale')),
            ],
            options={
                'verbose_name': 'car',
                'verbose_name_plural': 'cars',
            },
        ),
        migrations.CreateModel(
            name='CarToOwner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('car_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.car')),
            ],
            options={
                'verbose_name': 'carToOwner',
                'verbose_name_plural': 'carToOwners',
            },
        ),
        migrations.CreateModel(
            name='CarToServiceRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('car_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.car')),
            ],
            options={
                'verbose_name': 'carToServiceRecord',
                'verbose_name_plural': 'carToServiceRecords',
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, validators=[app.models.check_on_letter], verbose_name='name')),
                ('surname', models.CharField(max_length=30, validators=[app.models.check_on_letter], verbose_name='surname')),
                ('patronymic', models.CharField(blank=True, max_length=30, null=True, validators=[app.models.check_on_letter], verbose_name='patronymic')),
                ('money', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='money')),
                ('number', models.CharField(blank=True, null=True, validators=[app.models.check_on_variable_number], verbose_name='number')),
                ('cars', models.ManyToManyField(through='app.CarToOwner', to='app.car', verbose_name='cars')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'owner',
                'verbose_name_plural': 'owners',
            },
        ),
        migrations.AddField(
            model_name='cartoowner',
            name='owner_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.owner'),
        ),
        migrations.AddField(
            model_name='car',
            name='owners',
            field=models.ManyToManyField(through='app.CarToOwner', to='app.owner', verbose_name='owners'),
        ),
        migrations.CreateModel(
            name='OwnerToAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.address')),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.owner')),
            ],
            options={
                'verbose_name': 'ownerToAddress',
                'verbose_name_plural': 'ownerToAddresses',
            },
        ),
        migrations.AddField(
            model_name='owner',
            name='addresses',
            field=models.ManyToManyField(through='app.OwnerToAddress', to='app.address', verbose_name='addresses'),
        ),
        migrations.AddField(
            model_name='address',
            name='owners',
            field=models.ManyToManyField(through='app.OwnerToAddress', to='app.owner', verbose_name='owners'),
        ),
        migrations.CreateModel(
            name='ServiceRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_work', models.CharField(max_length=350, verbose_name='type_work')),
                ('price', models.FloatField(validators=[django.core.validators.MaxValueValidator(10000000), django.core.validators.MinValueValidator(0)], verbose_name='price')),
                ('the_date_of_the', models.DateField(validators=[app.models.check_on_variable_date], verbose_name='the_date_of_the')),
                ('car_id', models.ManyToManyField(through='app.CarToServiceRecord', to='app.car', verbose_name='car_id')),
            ],
            options={
                'verbose_name': 'serviceRecord',
                'verbose_name_plural': 'serviceRecords',
            },
        ),
        migrations.AddField(
            model_name='cartoservicerecord',
            name='service_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.servicerecord'),
        ),
        migrations.AddField(
            model_name='car',
            name='service_record_id',
            field=models.ManyToManyField(through='app.CarToServiceRecord', to='app.servicerecord', verbose_name='service_record_id'),
        ),
    ]
